/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RenderLazyImport = createFileRoute('/render')()
const Game2LazyImport = createFileRoute('/game2')()
const GameLazyImport = createFileRoute('/game')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RenderLazyRoute = RenderLazyImport.update({
  path: '/render',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/render.lazy').then((d) => d.Route))

const Game2LazyRoute = Game2LazyImport.update({
  path: '/game2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/game2.lazy').then((d) => d.Route))

const GameLazyRoute = GameLazyImport.update({
  path: '/game',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/game.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      preLoaderRoute: typeof GameLazyImport
      parentRoute: typeof rootRoute
    }
    '/game2': {
      preLoaderRoute: typeof Game2LazyImport
      parentRoute: typeof rootRoute
    }
    '/render': {
      preLoaderRoute: typeof RenderLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  GameLazyRoute,
  Game2LazyRoute,
  RenderLazyRoute,
])

/* prettier-ignore-end */
